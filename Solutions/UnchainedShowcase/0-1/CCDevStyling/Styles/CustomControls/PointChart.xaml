
<!--
    /*
    * This file has been created by ERGOSIGN GmbH - All rights reserved - http://www.ergosign.de
    * DO NOT ALTER OR REMOVE  THIS COPYRIGHT NOTICE OR THIS FILE HEADER.
    *
    * This file and the code contained in it are subject to the agreed contractual terms and conditions,
    * in particular with regard to resale and publication.
    */
-->
<SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing">

    <SharedResourceDictionary.MergedDictionaries>
        <SharedResourceDictionary Source="/CCDevStyling;component/Colors/Brushes.xaml" />
        <SharedResourceDictionary Source="/CCDevStyling;component/Styles/FrameworkElement.xaml" />
    </SharedResourceDictionary.MergedDictionaries>

    <Style x:Key="PointChartItemStyle" TargetType="{x:Type PointChartItem}" BasedOn="{StaticResource FrameworkElementStyle}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="150" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Blue01Brush}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="-1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PointChartItem}">
                    <Grid>
                        <Grid Width="{TemplateBinding MinWidth}" Height="{TemplateBinding MinHeight}">
                            <Ellipse Margin="-1"
                                     Fill="{StaticResource WhiteBrush}"
                                     StrokeThickness="2" />
                            <Ellipse Fill="{TemplateBinding Background}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="2" />
                        </Grid>
                        <Grid x:Name="HoverBorder"
                              Margin="0 0 0 30"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Opacity="0">
                            <Grid.Effect>
                                <DropShadowEffect PresentationOptions:Freeze="true" ShadowDepth="0" />
                            </Grid.Effect>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.RenderTransform>
                                <TranslateTransform Y="{Binding ActualHeight, ElementName=HoverBorder}" />
                            </Grid.RenderTransform>
                            <Border Grid.Row="1"
                                    Background="White"
                                    CornerRadius="5"
                                    IsHitTestVisible="False"
                                    Opacity="1"
                                    Padding="10">
                                <TextBlock x:Name="TextBlock">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:0.0}, {1:0.0}">
                                            <Binding Path="XUnitValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="YUnitValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Border>
                            <ed:RegularPolygon Width="15"
                                               Height="10"
                                               Fill="White"
                                               PointCount="3"
                                               Stretch="Fill" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Duration="0:0:0.2"
                                                         Storyboard.TargetName="HoverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Duration="0:0:0.2"
                                                         Storyboard.TargetName="HoverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="AttachedProperties.IsSearchResult" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Red01Brush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Blue01Brush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="AttachedProperties.IsSearchResult" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Red01Brush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryPointChartItemStyle" TargetType="{x:Type PointChartItem}" BasedOn="{StaticResource FrameworkElementStyle}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="150" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Blue01Brush}" />
        <Setter Property="VerticalContentAlignment" Value="center" />
        <Setter Property="HorizontalContentAlignment" Value="center" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="-1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PointChartItem}">
                    <Grid>
                        <Rectangle Width="{TemplateBinding MinWidth}"
                                   Height="{TemplateBinding MinHeight}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="2" />
                        <Grid x:Name="HoverBorder"
                              Margin="0 0 0 30"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Opacity="0">
                            <Grid.Effect>
                                <DropShadowEffect PresentationOptions:Freeze="true" ShadowDepth="0" />
                            </Grid.Effect>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.RenderTransform>
                                <TranslateTransform Y="{Binding ActualHeight, ElementName=HoverBorder}" />
                            </Grid.RenderTransform>
                            <Border Grid.Row="1"
                                    Background="White"
                                    CornerRadius="5"
                                    IsHitTestVisible="False"
                                    Opacity="1"
                                    Padding="10">
                                <TextBlock x:Name="TextBlock">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:0.0}, {1:0.0}">
                                            <Binding Path="XUnitValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="YUnitValue" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Border>
                            <ed:RegularPolygon Width="15"
                                               Height="10"
                                               Fill="White"
                                               PointCount="3"
                                               Stretch="Fill" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Duration="0:0:0.2"
                                                         Storyboard.TargetName="HoverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Duration="0:0:0.2"
                                                         Storyboard.TargetName="HoverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="AttachedProperties.IsSearchResult" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Red01Brush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Blue01Brush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="AttachedProperties.IsSearchResult" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Red01Brush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PointChartStyle" TargetType="{x:Type PointChart}" BasedOn="{StaticResource FrameworkElementStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="LineBrush" Value="{StaticResource CircularProgressBarBackgroundBrush}" />
        <Setter Property="LineThickness" Value="2" />
        <Setter Property="Margin" Value="-100" />
        <Setter Property="Padding" Value="100" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{StaticResource PointChartBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PointChart}">
                    <Grid ClipToBounds="True">
                        <Border Margin="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.LayoutTransform>
                                    <ScaleTransform ScaleY="-1" />
                                </Grid.LayoutTransform>
                                <Polyline x:Name="PART_Line"
                                          Stroke="{TemplateBinding LineBrush}"
                                          StrokeDashArray="2 2"
                                          StrokeThickness="{TemplateBinding LineThickness}" />
                                <Canvas x:Name="PART_DrawingArea" IsItemsHost="True" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</SharedResourceDictionary>